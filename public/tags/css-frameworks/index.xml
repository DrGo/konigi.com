<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Css Frameworks on Konigi</title>
    <link>http://konigi.com/tags/css-frameworks/</link>
    <description>Recent content in Css Frameworks on Konigi</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 07 Dec 2009 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://konigi.com/tags/css-frameworks/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>960 grid template for OmniGraffle</title>
      <link>http://konigi.com/tools/submissions/960-grid-template-omnigraffle/</link>
      <pubDate>Mon, 07 Dec 2009 00:00:00 +0000</pubDate>
      
      <guid>http://konigi.com/tools/submissions/960-grid-template-omnigraffle/</guid>
      <description>&lt;p&gt;&lt;div class=&#34;tool-screenshot mb1&#34;&gt;&lt;a href=&#34;http://briancray.com/2009/11/30/omnigraffle-wireframing-960-grid-template/&#34;&gt;&lt;img id=&#39;bluga-thumbnail-2692&#39; class=&#39;bluga-thumbnail custom&#39; src=&#39;http://media.konigi.com/bluga/
wt522fc1ed32a48_custom.jpg&#39;/&gt;&lt;/a&gt;&lt;/div&gt;&lt;p&gt;Iâ€™m a big fan of increasing efficiency and consistency from conceptual design to implementation. This OmniGraffle template has helped me quite a bit in that regard, and I decided to share it with others.&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://briancray.com/2009/11/30/omnigraffle-wireframing-960-grid-template/&#34;&gt;http://briancray.com/2009/11/30/omnigraffle-wireframing-960-grid-template/&lt;/a&gt;&lt;/p&gt;
      
</description>
    </item>
    
    <item>
      <title>The 1Kb CSS Grid</title>
      <link>http://konigi.com/tools/submissions/1kb-css-grid/</link>
      <pubDate>Sat, 20 Jun 2009 00:00:00 +0000</pubDate>
      
      <guid>http://konigi.com/tools/submissions/1kb-css-grid/</guid>
      <description>&lt;p&gt;&lt;div class=&#34;tool-screenshot mb1&#34;&gt;&lt;a href=&#34;http://www.1kbgrid.com/&#34;&gt;&lt;img id=&#39;bluga-thumbnail-2679&#39; class=&#39;bluga-thumbnail custom&#39; src=&#39;http://media.konigi.com/bluga/
wt522faee7f3fe1_custom.jpg&#39;/&gt;&lt;/a&gt;&lt;/div&gt;&lt;p&gt;&lt;a href=&#34;http://www.1kbgrid.com/&#34;&gt;The 1KB Grid is&lt;/a&gt; a simple, lightweight CSS framework that weighs in at 1K and handles fixed or fluid layouts. &lt;a href=&#34;http://www.usabilitypost.com/2009/05/29/the-1kb-css-grid-part-1/&#34;&gt;More info here&lt;/a&gt;.&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.1kbgrid.com/&#34;&gt;http://www.1kbgrid.com/&lt;/a&gt;&lt;/p&gt;
      
</description>
    </item>
    
    <item>
      <title>Boks: Visual Grid Editor</title>
      <link>http://konigi.com/tools/submissions/boks-visual-grid-editor/</link>
      <pubDate>Tue, 12 May 2009 00:00:00 +0000</pubDate>
      
      <guid>http://konigi.com/tools/submissions/boks-visual-grid-editor/</guid>
      <description>&lt;p&gt;&lt;div class=&#34;tool-screenshot mb1&#34;&gt;&lt;a href=&#34;http://toki-woki.net/p/Boks/&#34;&gt;&lt;img id=&#39;bluga-thumbnail-2707&#39; class=&#39;bluga-thumbnail custom&#39; src=&#39;http://media.konigi.com/bluga/
wt522fd7d6a5f27_custom.jpg&#39;/&gt;&lt;/a&gt;&lt;/div&gt;&lt;p&gt;&lt;a href=&#34;http://toki-woki.net/p/Boks/&#34;&gt;Boks&lt;/a&gt; is a cross-platform AIR app for visually creating grids using the Blueprint CSS framework. The app provides an inspector for setting up the page, column and gutter widths, provides typography settings for setting the vertical rhythm of your text, and generates the CSS and grid background image for you to export. Once your grid is set, draw sections in your grid, add lorem ipsum greeking, and the export file will include an HTML template with all of your divs laid out for you. Sweet.&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://toki-woki.net/p/Boks/&#34;&gt;http://toki-woki.net/p/Boks/&lt;/a&gt;&lt;/p&gt;
      
</description>
    </item>
    
    <item>
      <title>CSScaffold</title>
      <link>http://konigi.com/tools/submissions/csscaffold/</link>
      <pubDate>Tue, 17 Feb 2009 00:00:00 +0000</pubDate>
      
      <guid>http://konigi.com/tools/submissions/csscaffold/</guid>
      <description>&lt;p&gt;&lt;div class=&#34;tool-screenshot mb1&#34;&gt;&lt;a href=&#34;http://anthonyshort.com.au/blog/comments/video-an-introduction-to-csscaffold/&#34;&gt;&lt;img id=&#39;bluga-thumbnail-2755&#39; class=&#39;bluga-thumbnail custom&#39; src=&#39;http://media.konigi.com/bluga/
wt52305093d138f_custom.jpg&#39;/&gt;&lt;/a&gt;&lt;/div&gt;&lt;p&gt;Anthony Short produced a video demonstration of CSScaffold, a CSS framework takes the structural principles and architecture of current grid systems like Blueprint and the generation engine of Shaun Inman&amp;rsquo;s CSS Cacheer, and creates a CSS Grid System Builder that lets you define the rules for your layouts using meaningfully named CSS ids and classes, and automatically generates the grid system to those rules. &lt;/p&gt;
&lt;p&gt;It&amp;rsquo;s a framework that lets you focus on fitting the CSS to your design, rather than the reverse, and gives you the ability to focus on meaningful abstractions and naming rather than structural ones, so you can easily make changes in the future. This is something I find appealing, so I can name divs and not worry about affecting changes in number of columns throughout my templates, since the change can be made to affect semantically named divs at a higher level through the framework. Nice. Watch the video below for a demonstration.&lt;/p&gt;
&lt;div class=&#34;video&#34;&gt;
&lt;object width=&#34;610&#34; height=&#34;427&#34;&gt;&lt;param name=&#34;allowfullscreen&#34; value=&#34;true&#34; /&gt;&lt;param name=&#34;allowscriptaccess&#34; value=&#34;always&#34; /&gt;&lt;param name=&#34;movie&#34; value=&#34;http://vimeo.com/moogaloop.swf?clip_id=2866798&amp;amp;server=vimeo.com&amp;amp;show_title=1&amp;amp;show_byline=1&amp;amp;show_portrait=0&amp;amp;color=00ADEF&amp;amp;fullscreen=1&#34; /&gt;&lt;embed src=&#34;http://vimeo.com/moogaloop.swf?clip_id=2866798&amp;amp;server=vimeo.com&amp;amp;show_title=1&amp;amp;show_byline=1&amp;amp;show_portrait=0&amp;amp;color=00ADEF&amp;amp;fullscreen=1&#34; type=&#34;application/x-shockwave-flash&#34; allowfullscreen=&#34;true&#34; allowscriptaccess=&#34;always&#34; width=&#34;610&#34; height=&#34;427&#34;&gt;&lt;/embed&gt;&lt;/object&gt;&lt;p&gt;&lt;a href=&#34;http://vimeo.com/2866798&#34;&gt;CSScaffold Introduction&lt;/a&gt; from &lt;a href=&#34;http://vimeo.com/user1084293&#34;&gt;Anthony Short&lt;/a&gt; on &lt;a href=&#34;http://vimeo.com/&#34;&gt;Vimeo&lt;/a&gt;.&lt;/div&gt;
&lt;p&gt;I&amp;rsquo;ve become a regular user of both Blueprint and YUI for core column layout because it speeds development and makes maintenance and testing effortless. This seems like the right direction to move into if you work with CSS at any level, whether IXD doing prototypes or front end developer.&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://anthonyshort.com.au/blog/comments/video-an-introduction-to-csscaffold/&#34;&gt;http://anthonyshort.com.au/blog/comments/video-an-introduction-to-csscaffold/&lt;/a&gt;&lt;/p&gt;
      
</description>
    </item>
    
    <item>
      <title>960 Grid System</title>
      <link>http://konigi.com/tools/submissions/960-grid-system/</link>
      <pubDate>Fri, 25 Jul 2008 00:00:00 +0000</pubDate>
      
      <guid>http://konigi.com/tools/submissions/960-grid-system/</guid>
      <description>&lt;p&gt;&lt;div class=&#34;tool-screenshot mb1&#34;&gt;&lt;a href=&#34;http://960.gs/&#34;&gt;&lt;img id=&#39;bluga-thumbnail-2844&#39; class=&#39;bluga-thumbnail custom&#39; src=&#39;http://media.konigi.com/bluga/
wt5233699c55af9_custom.jpg&#39;/&gt;&lt;/a&gt;&lt;/div&gt;&lt;p&gt;The &lt;a href=&#34;http://960.gs/&#34;&gt;960 Grid System&lt;/a&gt; is a CSS Framework based on 960px width and can be used with 12 or 16 column grid. 12 column grid uses 60 px wide columns and 16 column grid is used with 40 px columns. Each has 10px gutters on either side or 20px combined between columns. &lt;/p&gt;
&lt;p&gt;960 px was chosen as a base number because it is divisible by 2, 3, 4, 5, 6, 8, 10, 12, 15, 16, 20, 24, 30, 32, 40, 48, 60, 64, 80, 96, 120, 160, 192, 240, 320 and 480. Seems like fairly flexible system, although I find the classes in use on Blueprint, particularly when nesting, to be a little simpler.&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://960.gs/&#34;&gt;http://960.gs&lt;/a&gt;&lt;/p&gt;
      
</description>
    </item>
    
  </channel>
</rss>