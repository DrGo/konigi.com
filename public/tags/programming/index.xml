<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Programming on Konigi</title>
    <link>http://localhost:1313/tags/programming/</link>
    <description>Recent content in Programming on Konigi</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 09 Oct 2014 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/programming/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Code.org Program for K-5</title>
      <link>http://localhost:1313/blog/codeorg-program-k-5/</link>
      <pubDate>Thu, 09 Oct 2014 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/codeorg-program-k-5/</guid>
      <description>&lt;p&gt;&lt;p&gt;Code.org now has an &lt;a href=&#34;http://code.org/educate/k5&#34;&gt;elementary school program&lt;/a&gt; (Kindergarden - 5th grade), and Code Studio for the program looks like its modeled after the free &lt;a href=&#34;http://scratch.mit.edu/&#34;&gt;MIT Scratch app&lt;/a&gt;, a visual tool that we used with our first son to introduce computer science fundamentals a few years ago. Good stuff.&lt;/p&gt;
&lt;div class=&#34;video&#34;&gt;&lt;iframe src=&#34;http://www.youtube.com/embed/rNIM1fzJ8u0&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Learn to Code</title>
      <link>http://localhost:1313/wiki/learn-code/</link>
      <pubDate>Tue, 30 Oct 2012 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/wiki/learn-code/</guid>
      <description>&lt;p&gt;&lt;h2 id=&#34;toc0&#34;&gt;The Debate&lt;/h2&gt;
&lt;p&gt;The debate about whether or not designers need to learn to code is essentially about knowing enough HTML and CSS, and maybe some Javascript to be able to prototype web views.&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Mastery and the ability to produce production code is not something most interaction designers and information architects will have the opportunity to achieve, but being capable enough to communicate design on web products requires some basic skills that you can learn in a few days or months to start. Here are some resources for designers looking to get started with basic markup and light scripting.&lt;/p&gt;

&lt;p&gt;&lt;h2 id=&#34;toc1&#34;&gt;Start&lt;/h2&gt;
&lt;p&gt;Great places for beginners to learn basic web markup, stylesheets and programming.&lt;br /&gt;
&lt;ul&gt;
    &lt;li&gt; &lt;a href=&#34;http://learn.shayhowe.com/html-css/&#34;&gt;A Beginner&amp;rsquo;s Guide to HTML and CSS&lt;/a&gt; - Shaye Howe&amp;rsquo;s guide for beginners outlines the fundamentals of front-end design and development with HTML and CSS.&lt;/li&gt;
    &lt;li&gt; &lt;a href=&#34;http://www.codecademy.com/&#34;&gt;Code Academy&lt;/a&gt; - Free. Start with HTML Fundamentals and Javscript intros. Move on to Jquery to add interaction.&lt;/li&gt;
    &lt;li&gt; &lt;a href=&#34;http://www.learnstreet.com/&#34;&gt;LearnStreet&lt;/a&gt; - Free. JavaScript for beginners is a good start. Ruby and Python are also offered.&lt;/li&gt;
&lt;/ul&gt;&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;&lt;h2 id=&#34;toc2&#34;&gt;Go further&lt;/h2&gt;
&lt;ul&gt;
    &lt;li&gt; Read some articles on &lt;a href=&#34;http://net.tutsplus.com/tutorials/html-css-techniques/30-html-best-practices-for-beginners/&#34;&gt;good practices and habits&lt;/a&gt; to get into as you to start. &lt;/li&gt;
    &lt;li&gt; &lt;a href=&#34;http://sass-lang.com/&#34;&gt;SASS, Syntactically Awesome Stylesheets&lt;/a&gt; - Stylesheet language with some scripting capabilities that compiles into CSS. There are even light PHP SASS compilers that work with WordPress if you go that route.&lt;/li&gt;
&lt;/ul&gt;&lt;/p&gt;

&lt;p&gt;&lt;h2 id=&#34;toc3&#34;&gt;Reference&lt;/h2&gt;
&lt;ul&gt;
    &lt;li&gt; &lt;a href=&#34;http://www.w3.org/MarkUp/Guide/&#34;&gt;W3C Markup Guide&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt; &lt;a href=&#34;http://www.w3.org/MarkUp/Guide/Style&#34;&gt;W3C CSS Guide&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Refactoring for designers</title>
      <link>http://localhost:1313/blog/refactoring-designers/</link>
      <pubDate>Thu, 13 Jan 2011 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/refactoring-designers/</guid>
      <description>&lt;p&gt;&lt;div class=&#34;notebook-screenshot&#34;&gt;&lt;a href=&#34;http://37signals.com/svn/posts/2738-refactoring-for-designers&#34;&gt;&lt;img id=&#39;bluga-thumbnail-2470&#39; class=&#39;bluga-thumbnail large&#39; src=&#39;http://media.konigi.com/bluga/
wt4d2f00c650db8_large.jpg&#39;/&gt;&lt;/a&gt;&lt;/div&gt;&lt;p&gt;Ryan Singer at 37signals &lt;a href=&#34;http://37signals.com/svn/posts/2738-refactoring-for-designers&#34;&gt;explains code refactoring to designers&lt;/a&gt; so that they can use it correctly in a design context.&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;&lt;blockquote&gt;Designers sometimes use the word “refactor” in a loose way. I think they overhear the word from programmers without getting the precise meaning. This article will introduce the term to designers so they can gain the same advantages that programmers have from a clear understanding.&lt;/p&gt;

&lt;p&gt;How do designers loosely understand refactoring? Many take it to mean “rearranging” a design or “adjusting without completely rethinking” it. Refactoring actually means something else. It means changing the way a design is built without changing the way it looks from the outside.&lt;/blockquote&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://37signals.com/svn/posts/2738-refactoring-for-designers&#34;&gt;Read more&lt;/a&gt; at svn.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://37signals.com/svn/posts/2738-refactoring-for-designers&#34;&gt;http://37signals.com/svn/posts/2738-refactoring-for-designers&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Creative Mornings: Physical Computing</title>
      <link>http://localhost:1313/blog/creative-mornings-physical-computing/</link>
      <pubDate>Fri, 12 Dec 2008 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/creative-mornings-physical-computing/</guid>
      <description>&lt;p&gt;&lt;div class=&#34;notebook-screenshot&#34;&gt;&lt;img src=&#34;http://media.konigi.com/notebook/creativemornings-arduino.jpg&#34; class=&#34;notebook-image&#34; /&gt;&lt;/div&gt;&lt;p&gt;At today&amp;rsquo;s excellent &lt;a href=&#34;http://www.swiss-miss.com/weblog/2008/11/creativemorni-1.html&#34;&gt;Creative Mornings&lt;/a&gt; on physical computing, &lt;a href=&#34;http://10minchat.com/&#34;&gt;Zach Klein and Casey Pugh from Vimeo&lt;/a&gt; talked about tinkering with &lt;a href=&#34;http://www.arduino.cc/&#34;&gt;Arduino&lt;/a&gt;, an open-source electronics prototyping platform. They showed some simple circuit controls using the LEDs and Processing, and then demoed a Daft Punk helmet they created with LEDs, that could then be controlled/drawn on via a Flash UI. Neat stuff.  &lt;/p&gt;
&lt;p&gt;Later, I got to talk to Carl, a freelance developer/interaction designer who turned me onto &lt;a href=&#34;http://www.nycresistor.com/&#34;&gt;NYC Resistor&lt;/a&gt;. NYC Resistor is a hacker collective with a shared space located in downtown Brooklyn where people meet regularly to share knowledge, and hack on projects together.&lt;/p&gt;
&lt;p&gt;As a maker, I&amp;rsquo;ve been really interested in doing more to combine my craft hobbies with my techie and interface design interests. Resistor sounds like the kind of place I&amp;rsquo;d be able to do that, and I agree that more web people should play around in this area. Reminds me of some of the 1990&amp;rsquo;s fusion of art/tech in NYC, ala adaweb, JODI, and Eyebeam.&lt;/p&gt;
&lt;p&gt;Resistor sounds pretty cool. I&amp;rsquo;ve been looking for a reason to play with Processing, and looks like some Processing workshops are going on at the space. &lt;/p&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Napkin Look &amp; Feel</title>
      <link>http://localhost:1313/blog/napkin-look-feel/</link>
      <pubDate>Mon, 17 Nov 2008 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/napkin-look-feel/</guid>
      <description>&lt;p&gt;&lt;div class=&#34;notebook-screenshot&#34;&gt;&lt;a href=&#34;http://napkinlaf.sourceforge.net/&#34;&gt;&lt;img src=&#34;http://media.konigi.com/notebook/napkin-look-and-feel.jpg&#34; class=&#34;notebook-image&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;p&gt;&lt;a href=&#34;http://napkinlaf.sourceforge.net/&#34;&gt;Napkin Look and Feel&lt;/a&gt; is a cool looking open source tool for Java developers to produce application prototypes with a low-fidelity sketchy interface.&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;The idea is to try to develop a look and feel that can be used in Java applications that looks informal and provisional, yet be fully functional for development. Often when people see a GUI mock-up, or a complete GUI without full functionality, they assume that the code behind it is working. While this can be used to sleazy advantage, it can also convince people who ought to know better (like your managers) that you are already done when you have just barely begun, or when only parts are complete. No matter how much you speak to their rational side, the emotional response still says &amp;ldquo;Done!&amp;rdquo;. Which after a while leads to a later question: &amp;ldquo;That was done months ago! What are they doing? Playing Quake?&amp;rdquo; A good article on this is Joel on Software&amp;rsquo;s “The Iceberg Secret, Revealed”.&lt;/p&gt;
&lt;p&gt;So the idea is to create a complete look and feel that can be used while the thing is not done which will convey an emotional message to match the rational one. As pieces of the work are done, the GUI for those pieces can be switched to use the &amp;ldquo;formal&amp;rdquo; (final) look and feel, allowing someone looking at demos over time to see the progress of the entire system reflected in the expression of the GUI. &lt;/p&gt;&lt;/blockquote&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://napkinlaf.sourceforge.net/&#34;&gt;http://napkinlaf.sourceforge.net/&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>